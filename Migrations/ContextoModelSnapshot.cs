// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoFinal_PrestamosLibros.DAL;

namespace ProyectoFinal_PrestamosLibros.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.Devoluciones", b =>
                {
                    b.Property<int>("DevolucionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.HasKey("DevolucionId");

                    b.HasIndex("EstudianteId");

                    b.ToTable("Devoluciones");
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.DevolucionesDetalle", b =>
                {
                    b.Property<int>("DevolucionDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DevolucionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Dias")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LibroId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LibrosDevueltos")
                        .HasColumnType("INTEGER");

                    b.HasKey("DevolucionDetalleId");

                    b.HasIndex("DevolucionId");

                    b.HasIndex("LibroId");

                    b.ToTable("DevolucionesDetalle");
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.Editoriales", b =>
                {
                    b.Property<int>("EditorialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.HasKey("EditorialId");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.EntradasLibros", b =>
                {
                    b.Property<int>("EntradaLibroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Cantidad")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("LibroId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EntradaLibroId");

                    b.HasIndex("LibroId");

                    b.ToTable("EntradasLibros");
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.Estudiantes", b =>
                {
                    b.Property<int>("EstudianteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellidos")
                        .HasColumnType("TEXT");

                    b.Property<double>("Cedula")
                        .HasColumnType("REAL");

                    b.Property<string>("Correo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genero")
                        .HasColumnType("TEXT");

                    b.Property<double>("Matricula")
                        .HasColumnType("REAL");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<double>("Telefono")
                        .HasColumnType("REAL");

                    b.HasKey("EstudianteId");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.Libros", b =>
                {
                    b.Property<int>("LibroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Existencia")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("LibroId");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.Prestamos", b =>
                {
                    b.Property<int>("PrestamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("TEXT");

                    b.Property<double>("LibrosTotal")
                        .HasColumnType("REAL");

                    b.HasKey("PrestamoId");

                    b.HasIndex("EstudianteId");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.PrestamosDetalle", b =>
                {
                    b.Property<int>("PrestamoDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CantidadLibro")
                        .HasColumnType("REAL");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LibroId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PrestamoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrestamosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PrestamoDetalleId");

                    b.HasIndex("LibroId");

                    b.HasIndex("PrestamoId");

                    b.ToTable("PrestamosDetalle");
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.SalidasLibros", b =>
                {
                    b.Property<int>("SalidaLibroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Cantidad")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("LibroId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SalidaLibroId");

                    b.HasIndex("LibroId");

                    b.ToTable("SalidasLibros");
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellidos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contrasena")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Apellidos = "Hernandez Rodriguez",
                            Contrasena = "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5",
                            FechaCreacion = new DateTime(2020, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NombreUsuario = "admin",
                            Nombres = "Jose Anderson"
                        });
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.Devoluciones", b =>
                {
                    b.HasOne("ProyectoFinal_PrestamosLibros.Entidades.Estudiantes", "estudiantes")
                        .WithMany()
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.DevolucionesDetalle", b =>
                {
                    b.HasOne("ProyectoFinal_PrestamosLibros.Entidades.Devoluciones", null)
                        .WithMany("Detalle")
                        .HasForeignKey("DevolucionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal_PrestamosLibros.Entidades.Libros", "libros")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.EntradasLibros", b =>
                {
                    b.HasOne("ProyectoFinal_PrestamosLibros.Entidades.Libros", "eLibro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.Prestamos", b =>
                {
                    b.HasOne("ProyectoFinal_PrestamosLibros.Entidades.Estudiantes", "estudiantes")
                        .WithMany()
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.PrestamosDetalle", b =>
                {
                    b.HasOne("ProyectoFinal_PrestamosLibros.Entidades.Libros", "libros")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal_PrestamosLibros.Entidades.Prestamos", null)
                        .WithMany("Detalle")
                        .HasForeignKey("PrestamoId");
                });

            modelBuilder.Entity("ProyectoFinal_PrestamosLibros.Entidades.SalidasLibros", b =>
                {
                    b.HasOne("ProyectoFinal_PrestamosLibros.Entidades.Libros", "sLibro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
